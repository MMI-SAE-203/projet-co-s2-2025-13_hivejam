---
import Layout from "../../layouts/Layout.astro";

import User from "../../assets/svg/User_orange.svg";

const { id } = Astro.params;
import { getTeamBoard, addTask } from "../../../backend/backend.mjs";
import Tache from "../../components/Card/Team/Tache.astro";
const team = await getTeamBoard(id);
console.log(team?.expand?.users);

if (Astro.request.method == "POST") {
    const data = await Astro.request.formData();
    const message = await addTask(data, team?.id);
    return Astro.redirect(message.redirect);
}
---

<Layout>
    <div class="px-10 py-20">
        <section class="flex justify-between items-center">
            <div class="flex gap-10 items-center">
                <p>{team?.name}</p>
                <div class="flex items-center gap-2">
                    {
                            team?.expand?.users.map((user) => (
                            <a href=`/profile/${user.id}` class="flex gap-2 items-center">
                                <img src={user.image_URL} alt="" width="30px" height="30px"/>
                                <p>{user.name}</p>
                            </a>
                        ))
                    }
                </div>
            </div>
            <a href="" class="btn-light">
                <User />
                Inviter
            </a>
        </section>
        <section class="space-y-10">
            <div class="flex justify-between items-center">
                <h1>{team?.expand?.game_jam?.name}</h1>
                <a href=`/toutes_les_jams/${team?.expand?.game_jam?.id}` class="btn-light">Page de la jam</a>
            </div>
            <div class="grid grid-cols-2 gap-10">
                <article class="flex flex-col gap-4 items-center border-1 py-10 rounded-md">
                    {
                        team?.time == "present" ? (
                        <header>
                            <h2>Compte à rebours</h2>
                        </header>
                            <div>
                                <p>Se termine dans ...</p>
                                <p class="CD font-black text-negative text-6xl">{team.time_info}</p>
                            </div>
                        ) : (
                            <p class="text-2xl">{team?.time_info}</p>
                        )
                    }
                </article>
                <article class="flex flex-col items-center justify-center gap-4">
                    <header>
                        <h2>thème</h2>
                    </header>
                    <p>{team?.expand?.game_jam?.theme}</p>
                </article>
            </div>
        </section>  
        <section x-data="{open: false}" class="mt-20 space-y-5">
            <div class="flex justify-between">
                <h2>Suivie de tâche</h2>
                <button id="menu-btn"
                aria-label="Menu"
                @click="open = !open"
                class="btn-light">Ajouter une thâche</button>
            </div>
            <div class="grid grid-cols-[1fr_1fr_1fr_1fr_75px]">
                <p class="font-bold text-xl text-brand-1">Titre</p>
                <p class="font-bold text-xl">Description</p>
                <p class="font-bold text-xl">Responsables</p>
                <p class="font-bold text-xl">Statut</p>
            </div>
            <div class="flex flex-col gap-3">
                {
                    team?.task.map((record) => <Tache {...record}/>)
                }
            </div>
            <div class="bg-white fixed border-2 rounded w-70 top-40 bottom-40 right-1/3" id="menu" :aria-hidden="!open" x-show="open">
                <form method="POST">
                    <input type="text" placeholder="Titre" name="name" required>
                    <input type="text" placeholder="Description" name="description">
                    <div>
                        {
                            team?.expand?.users.map((user) => (
                                <div class="flex gap-2">
                                    <input type="checkbox" name="user" value={user.id} />
                                    <img src={user.image_URL} alt="" width="40px" />
                                    <p>{user.name}</p>
                                </div>
                            ))
                        }
                    </div>
                    <select name="state">
                        <option value="pas commencé">pas commencé</option>
                        <option value="en cours">en cours</option>
                        <option value="terminé">terminé</option>
                    </select>
                    <button type="submit">Créer</button>
                </form>
            </div>
        </section>
    </div>
</Layout>

<script>
    const CDs = document.querySelectorAll(".CD");

    function count() {
        CDs.forEach((CD) => {
            if (!CD.textContent) {
                return null;
            }
            const parts = CD.textContent.trim().split(":");
            if (parts.length !== 3) return;

            let [hours, minutes, seconds] = parts.map(Number);

            let totalSeconds = hours * 3600 + minutes * 60 + seconds;
            if (totalSeconds <= 0) return;

            totalSeconds--;

            const h = String(Math.floor(totalSeconds / 3600)).padStart(2, "0");
            const m = String(Math.floor((totalSeconds % 3600) / 60)).padStart(
                2,
                "0",
            );
            const s = String(totalSeconds % 60).padStart(2, "0");

            CD.textContent = `${h}:${m}:${s}`;
        });
    }

    setInterval(count, 1000);
</script>